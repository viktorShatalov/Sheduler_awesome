@import 'assets/scss/framework/scss-variables';
@import 'assets/scss/general/mixins';

.container {
  display: inline-flex;
  flex-direction: column;
  width: 100%;
  padding-bottom: 8px;
  position: relative;

  @include media(">small") {
    min-width: 460px;
  }

  @include media(">tiny") {
    height: 60px;
    max-width: 490px;
    font-size: 20px;
  }

  @include media("<=tiny") {
    height: 50px;
    font-size: 16px;
  }
}

.input {
  display: block;
  width: 100%;
  font-size: 16px;
  color: $text;
  font-size: 1em;
  transform: translate3d(0,0,0);

  &:-webkit-autofill,
  &:-webkit-autofill:hover, 
  &:-webkit-autofill:focus {
    -webkit-text-fill-color: $text;
    -webkit-box-shadow: 0 0 0px 1000px $white inset;
    transition: background-color 5000s ease-in-out 0s;
  }
}

.placeholder {
  position: absolute;
  bottom: 12px;
  left: 0;
  right: 0;
  color: $text;
  text-align: initial;
  mix-blend-mode: normal;
  opacity: 0.4;
  font-size: 1em;
  line-height: 1.05em;
  transform-origin: left top;
  pointer-events: none;
  transition: transform .15s;
}

.notValid {
  .placeholder {
    color: $error;
  }
  .input {
    color: $error;
  }
  .control:before {
    border-top: 2px solid $error;
    transform:  translate3d(0,0,0) scale(1, 1);
  }

  &:hover .errors {
    overflow: initial;
    text-overflow: initial;
  }
}

.errors {
  position: absolute;
  bottom: -16px;
  left: 0;
  color: $error;
  font-size: 13px;
  width: 100%;
  white-space: nowrap;
  text-align: initial;

  overflow: hidden;
  text-overflow: ellipsis;
}

.container:focus,
.container:focus-within {
  // .placeholder {
  //   transform: translate3d(0, -22px, 0) scale(0.7);
  // }

  .control {
    &:before {
      transform:  translate3d(0,0,0) scale(1, 1);
    }
  }
}

.fill {
  &.placeholder {
    transform: translate3d(0, -22px, 0) scale(0.7);
  }

  &.control {
    &:before {
      transform:  translate3d(0,0,0) scale(1, 1);
    }
  }
}

.control {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 0;
  width: 100%;
  height: 22px;
  align-self: flex-end;

  &:after,
  &:before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
  }

  &:after {
    transform: translate3d(0,0,0);
    border-top: 2px solid $border;
  }

  &:before {
    transform:  translate3d(0,0,0) scale(0, 1);
    border-top: 2px solid $primary;
    z-index: 1;
    transform-origin: 0 center;
    transition: transform .15s;
  }

  & > span {
    flex: none;
    max-width: calc(100% - 18px);
    min-width: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  svg {
    flex: none;
    color: $text;
    mix-blend-mode: normal;
    opacity: 0.4;
    transition: transform .1s;
  }
  
  & > span {
    font: inherit;
  }

  &.open {
    svg {
      transform: scale(1, -1);
      transition: transform .3s;
    }
  }
}

:global(.react-dropdown-select-dropdown) {
  min-width: 150px;
}

.content {
  display: flex;
  flex-direction: column;
  max-height: 300px;
}

.list {
  flex: 1;
  overflow: auto;
  font: inherit;
  // padding-top: 20px;
  // padding-bottom: 20px;
}

.search {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 24px;
  padding-bottom: 12px;
  padding-left: 20px;
  padding-right: 20px;

  & > input {
    flex: 1;
    width: 100%;
    font-weight: 500;
    font-size: 16px;
    padding-bottom: 8px;
    border-bottom: 1px solid $border;
    transition: all .2s;

    &:focus {
      border-bottom: 1px solid $primary;
    }

    &::placeholder {
      color: #1B1D1E;
      mix-blend-mode: normal;
      opacity: 0.2;
    }
  }
}

.count {
  margin-left: auto;
  padding-left: 12px;
  margin-right: 4px;
  color: $primary;
  font-weight: 600;
  font-size: 16px;
  min-width: 10px;
  flex: none;
}

.clear {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 24px;
  width: 24px;
  background-color: $utility;
  border-radius: 50%;
  color: #707A88;
  transition: filter .2s;

  &:hover {
    filter: brightness(0.95);
  }
}

.item {
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: background-color .2s;

  padding-top: 12px;
  padding-bottom: 12px;
  padding-left: 20px;
  padding-right: 20px;
  width: 100%;
  text-align: initial;
  display: flex;
  align-items: center;

  & > svg {
    margin-left: 4px;
  }

  &:hover {
    background-color: rgba(0,0,0,0.1);
  }
}

.selected {
  color: $primary;
}

:global(.toggle) {
  &-enter {
    opacity: 0;
    transform: translate3d(0, -10px, 0);
  }
  &-enter-active {
    opacity: 1;
    transform: translate3d(0, 0, 0);
    transition: transform .4s, opacity .4s;
  }
  &-enter-done {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  &-exit {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  &-exit-done {
    opacity: 0;
    transform: translate3d(0, 10px, 0);
  }
  &-exit-active {
    opacity: 0;
    transform: translate3d(0, 10px, 0);
    transition: transform 0.2s, opacity .2s;
  }
}

.disabled.container {
  pointer-events: none !important;
  opacity: 1;

  .control {
    color: $text !important;

    span {
      color: $text !important;
    }

    svg {
      opacity: 0;
    }

    &:before {
      border-color: $border !important;
    }
  }
}